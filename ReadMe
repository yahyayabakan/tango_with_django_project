Tango with Django 2 
Python web development with Django
Used technologies and external services;
• the Python programming language;
• the Pip package manager;
• Django;
• unit testing;
• the Git version control system;
• GitHub;
• HTML;
• CSS;
• the JavaScript programming language;
• the JQuery library;
• the Twitter Bootstrap framework;
• the Bing Search API; and
• the PythonAnywhere hosting service

Design Brief
Let’s imagine that we would like to create a website called Rango that lets users
browse through user-defined categories to access various web pages. In Spanish,
the word rango²⁰ is used to mean “a league ranked by quality” or “a position in a social
hierarchy” – so we can imagine that at some point, we will want to rank the web
pages in Rango.
• For the main page of the Rango website, your client would like visitors to be
able to see:
– the five most viewed pages;
– the five most viewed (or rango’ed) categories; and
– some way for visitors to browse and/or search through categories.
• When a user views a category page, your client would like Rango to display:
– the category name, the number of visits, the number of likes, along with the list
of associated pages in that category (showing the page’s title, and linking
to its URL); and
– some search functionality (via the search API) to find other pages that can be
linked to this category.
• For a particular category, the client would like: the name of the category to be
recorded; the number of times each category page has been visited; and how many
users have clicked a “like” button (i.e. the page gets rango’ed, and voted up the
social hierarchy).
• Each category should be accessible via a readable URL – for example, /rango/booksabout-django/.
